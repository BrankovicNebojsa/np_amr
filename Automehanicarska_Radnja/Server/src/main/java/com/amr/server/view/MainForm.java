package com.amr.server.view;

import com.amr.common.domain.Korisnik;
import com.amr.common.domain.Radnik;
import com.amr.server.server.Server;
import com.amr.server.tableModel.KorisniciTableModel;
import java.awt.Color;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 * Klasa koja predstavlja glavnu formu serverske aplikacije
 *
 * @author Nebojsa Brankovic
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Server
     */
    private Server server;
    /**
     * Pomocni brojac
     */
    private int counter;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        this.server = null;
        counter = 0;
        prepareForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButtonStartServer = new javax.swing.JButton();
        jButtonStopServer = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabelStanje = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabelBrojPokrenutihKlijentskihAplikacija = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableKorisnici = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuSettings = new javax.swing.JMenu();
        jMenuItemConfig = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Serverska aplikacija");
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Automehanicarska radnja");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButtonStartServer.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonStartServer.setText("Start server");
        jButtonStartServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartServerActionPerformed(evt);
            }
        });

        jButtonStopServer.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonStopServer.setText("Stop server");
        jButtonStopServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStopServerActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Trenutno stanje servera:");

        jLabelStanje.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelStanje.setText("jLabel3");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Broj pokrenutih klijentskih aplikacija:");

        jLabelBrojPokrenutihKlijentskihAplikacija.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelBrojPokrenutihKlijentskihAplikacija.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelBrojPokrenutihKlijentskihAplikacija.setText("jLabel4");

        jTableKorisnici.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTableKorisnici.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Korisnik", "Vreme povezivanja"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableKorisnici.setRowHeight(30);
        jScrollPane1.setViewportView(jTableKorisnici);

        jMenuSettings.setText("Podesavanja");

        jMenuItemConfig.setText("Konfiguracija servera");
        jMenuItemConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConfigActionPerformed(evt);
            }
        });
        jMenuSettings.add(jMenuItemConfig);

        jMenuBar1.add(jMenuSettings);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(480, 480, 480)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel2)
                        .addGap(13, 13, 13)
                        .addComponent(jLabelStanje, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3)
                        .addGap(6, 6, 6)
                        .addComponent(jLabelBrojPokrenutihKlijentskihAplikacija))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonStartServer)
                        .addGap(60, 60, 60)
                        .addComponent(jButtonStopServer)))
                .addGap(68, 68, 68)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabelStanje))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabelBrojPokrenutihKlijentskihAplikacija))
                        .addGap(105, 105, 105)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonStartServer)
                            .addComponent(jButtonStopServer)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metoda koja se desava kada se pritisne dugme start
     *
     * @param evt pritisnuto dugme start
     */
    private void jButtonStartServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartServerActionPerformed
        if (server == null) {
            server = new Server(this);
            server.start();
            jLabelStanje.setText("AKTIVAN");
            jLabelStanje.setForeground(new Color(0, 255, 0).darker());
            System.out.println("Pokrenut server.");
        } else {
            JOptionPane.showMessageDialog(this, "Server je vec pokrenut");
        }
    }//GEN-LAST:event_jButtonStartServerActionPerformed

    /**
     * Metoda koja se desava kada se pritisne dugme stop
     *
     * @param evt pritisnuto dugme stop
     */
    private void jButtonStopServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStopServerActionPerformed
        if (server != null) {
            server.stopServer();
            server = null;
            jLabelStanje.setText("UGASEN");
            jLabelStanje.setForeground(new Color(255, 0, 0));
        } else {
            JOptionPane.showMessageDialog(this, "Server je vec ugasen.");
        }
    }//GEN-LAST:event_jButtonStopServerActionPerformed

    private void jMenuItemConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConfigActionPerformed
        new ConfigForm().setVisible(true);
    }//GEN-LAST:event_jMenuItemConfigActionPerformed

    /**
     * Glavna funkcija
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonStartServer;
    private javax.swing.JButton jButtonStopServer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelBrojPokrenutihKlijentskihAplikacija;
    private javax.swing.JLabel jLabelStanje;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemConfig;
    private javax.swing.JMenu jMenuSettings;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableKorisnici;
    // End of variables declaration//GEN-END:variables

    /**
     * Metoda koja je zaduzena da pripremi formu za prikaz
     */
    private void prepareForm() {
        jLabelStanje.setText("UGASEN");
        jLabelStanje.setForeground(new Color(255, 0, 0));
        jLabelBrojPokrenutihKlijentskihAplikacija.setText("0");

        jTableKorisnici.setModel(new KorisniciTableModel());
    }

    /**
     * Metoda koja je zaduzena za dodavanje klijenta u tabelu
     *
     * @param radnik klijent u tabeli
     */
    public void addUser(Radnik radnik) {
        jLabelBrojPokrenutihKlijentskihAplikacija.setText(String.valueOf(++counter));
        Korisnik user = new Korisnik();
        user.setRadnik(radnik);
        user.setDatumPovezivanja(new Date());
        ((KorisniciTableModel) jTableKorisnici.getModel()).addUser(user);
    }

    /**
     * Metoda koja je zaduzena za uklanjanje klijenta iz tabele
     *
     * @param radnik klijent u tabeli
     */
    public void removeUser(Radnik radnik) {
        jLabelBrojPokrenutihKlijentskihAplikacija.setText(String.valueOf(--counter));
        Korisnik user = new Korisnik();
        user.setRadnik(radnik);
        ((KorisniciTableModel) jTableKorisnici.getModel()).removeUser(user);

    }
}
